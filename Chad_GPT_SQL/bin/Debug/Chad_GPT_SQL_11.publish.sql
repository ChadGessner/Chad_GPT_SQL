/*
Deployment script for Chad_GPT_SQL

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Chad_GPT_SQL"
:setvar DefaultFilePrefix "Chad_GPT_SQL"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Procedure [dbo].[GetUserByUsernameAndPassword]...';


GO
CREATE PROCEDURE [dbo].[GetUserByUsernameAndPassword]
	@UserName NVARCHAR(40),
	@Password NVARCHAR(40)
AS
begin
	SELECT Id, UserName, [Password]
	FROM [dbo].[User]
	WHERE UserName = @UserName AND [Password] = @Password
end
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]	
ConnectionString: "Data Source=DESKTOP-IS402U0\SQLEXPRESS;Integrated Security=True;Persist Security Info=False;Pooling=False;MultipleActiveResultSets=False;Connect Timeout=60;Encrypt=False;TrustServerCertificate=False"
--------------------------------------------------------------------------------------
*/
begin
    IF NOT EXISTS (SELECT 1 FROM dbo.[Type])
    INSERT INTO dbo.[Type] (TypeName)
    VALUES ('Image'),('Question');
    IF NOT EXISTS (SELECT 1 FROM dbo.[Category])
    INSERT INTO dbo.[Category] (CategoryName, [Type])
    VALUES ('Misc. Images', 1
    ),('Misc. Questions', 2);
    IF NOT EXISTS (SELECT 1 FROM dbo.[User])
    INSERT INTO dbo.[User] (UserName, [Password])
    VALUES ('Chad_GPT','foo');
end;



GO

GO
PRINT N'Update complete.';


GO
